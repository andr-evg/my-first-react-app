{"version":3,"sources":["components/AppHeader.jsx","components/SearchPanel.jsx","components/PostStatusFilter.jsx","components/PostListItem.jsx","components/PostList.jsx","components/PostAddForm.jsx","components/App.jsx","index.js"],"names":["AppHeader","postEndingHandler","allPosts","total","ending","likeEndingHandler","liked","this","props","posts","likes","className","React","Component","SearchPanel","onUpdateSearch","e","term","target","value","setState","state","type","placeholder","onChange","PostStatusFilter","buttons","name","label","map","activeClass","filter","onClick","onFilterSelect","PostListItem","onDelete","onToggleFavorite","onToggleLike","classNames","favorite","like","PostList","elements","item","id","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAdd","buttonClasses","App","deleteItemHandler","data","index","findIndex","elem","before","slice","after","addItemHandler","newItem","maxId","toggleLikeHangler","old","toggleFavoriteHangler","searchPost","items","length","indexOf","filterPost","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17bc1747.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../css/app-header.css\"\r\n\r\nexport default class AppHeader extends React.Component {\r\n  postEndingHandler = (allPosts) => {\r\n    const total = allPosts % 10\r\n    const ending = {\r\n      first: \" запись\",\r\n      second: \" записи\",\r\n      third: \" записей\",\r\n    }\r\n\r\n    switch (true) {\r\n      case allPosts >= 5 && allPosts <= 20:\r\n        return allPosts + ending.third\r\n      case total === 1:\r\n        return allPosts + ending.first\r\n      case total > 1 && total < 5:\r\n        return allPosts + ending.second\r\n      case total > 4:\r\n        return allPosts + ending.third\r\n      default:\r\n        return allPosts + ending.third\r\n    }\r\n  }\r\n\r\n  likeEndingHandler = (liked) => {\r\n    const total = liked % 10\r\n    const ending = {\r\n      first: \"понравилось \",\r\n      second: \"понравилась \",\r\n    }\r\n    switch (true) {\r\n      case liked >= 2 && liked === 0:\r\n        return ending.first + liked\r\n      case total === 1 && liked !== 11:\r\n        return ending.second + liked\r\n      default:\r\n        return ending.first + liked\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { liked, allPosts } = this.props\r\n    const posts = this.postEndingHandler(allPosts)\r\n    const likes = this.likeEndingHandler(liked)\r\n    return (\r\n      <div className=\"app-header\">\r\n        <h1>Yevhen Andryushchenko</h1>\r\n        <h2>\r\n          {posts}, из них {likes}\r\n        </h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport \"../css/search-panel.scss\"\r\n\r\nexport default class SearchPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      term: \"\",\r\n    }\r\n  }\r\n\r\n  onUpdateSearch = (e) => {\r\n    const term = e.target.value\r\n    this.setState({ term })\r\n    this.props.onUpdateSearch(term)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Поиск по записям\"\r\n        onChange={this.onUpdateSearch}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport \"../css/post-status-filter.scss\"\r\n\r\nexport default class PostStatusFilter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.buttons = [\r\n      { name: \"all\", label: \"Все\" },\r\n      { name: \"like\", label: \"Понравилось\" },\r\n    ]\r\n  }\r\n\r\n  render() {\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const active = this.props.filter === name\r\n      const activeClass = active ? \"btn-active\" : \"btn-outline\"\r\n\r\n      return (\r\n        <button\r\n          onClick={() => {\r\n            this.props.onFilterSelect(name)\r\n          }}\r\n          key={name}\r\n          type=\"button\"\r\n          className={`btn ${activeClass}`}\r\n        >\r\n          {label}\r\n        </button>\r\n      )\r\n    })\r\n\r\n    return <div>{buttons}</div>\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport \"../css/post-list-item.scss\"\r\n\r\nexport default class PostListItem extends React.Component {\r\n  render() {\r\n    const { label, onDelete, onToggleFavorite, onToggleLike, favorite, like } =\r\n      this.props\r\n    let classNames = \"app-list-item\"\r\n    if (favorite) {\r\n      classNames += \" favorite\"\r\n    }\r\n\r\n    if (like) {\r\n      classNames += \" like\"\r\n    }\r\n\r\n    return (\r\n      <div className={classNames}>\r\n        <span className=\"app-list-item-label\" onClick={onToggleLike}>\r\n          {label}\r\n        </span>\r\n        <div>\r\n          <button onClick={onToggleFavorite} type=\"button\" className=\"btn-star\">\r\n            <i className=\"fa fa-star\"></i>\r\n          </button>\r\n          <button onClick={onDelete} type=\"button\" className=\"btn-trash\">\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </button>\r\n          <i className=\"fa fa-heart\"></i>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport \"../css/post-list.scss\"\r\n\r\nimport PostListItem from \"./PostListItem\"\r\n\r\nconst PostList = ({ posts, onDelete, onToggleLike, onToggleFavorite }) => {\r\n  const elements = posts.map((item) => {\r\n    return (\r\n      <li key={item.id} className=\"list-group-item\">\r\n        <PostListItem\r\n          onDelete={() => {\r\n            onDelete(item.id)\r\n          }}\r\n          onToggleLike={() => {\r\n            onToggleLike(item.id)\r\n          }}\r\n          onToggleFavorite={() => {\r\n            onToggleFavorite(item.id)\r\n          }}\r\n          favorite={item.favorite}\r\n          like={item.like}\r\n          label={item.label}\r\n        />\r\n        {/* <PostListItem {...item} */}\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return <ul className=\"list-group\">{elements}</ul>\r\n}\r\n\r\nexport default PostList\r\n","import React from \"react\"\r\nimport \"../css/post-add-form.scss\"\r\n\r\nexport default class PostAddForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      text: \"\",\r\n    }\r\n  }\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    })\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (this.state.text) {\r\n      this.props.onAdd(this.state.text)\r\n    }\r\n    this.setState({\r\n      text: \"\",\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const buttonClasses = this.state.text\r\n      ? \"bottom-panel-button\"\r\n      : \"bottom-panel-button muted\"\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"bottom-panel\">\r\n        <input\r\n          className=\"new-post-label\"\r\n          type=\"text\"\r\n          placeholder=\"О чем вы думаете сейчас?\"\r\n          onChange={this.onValueChange}\r\n          value={this.state.text}\r\n        />\r\n        <button className={buttonClasses} type=\"submit\">\r\n          Добавить\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\n\r\nimport AppHeader from \"../components/AppHeader\"\r\nimport SearchPanel from \"../components/SearchPanel\"\r\nimport PostStatusFilter from \"../components/PostStatusFilter\"\r\nimport PostList from \"../components/PostList\"\r\nimport PostAddForm from \"../components/PostAddForm\"\r\nimport \"../css/app.scss\"\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: [\r\n        { label: \"Первая запись :)\", favorite: true, like: false, id: 1 },\r\n        {\r\n          label:\r\n            \"Вторая запись. Немного текста для добавления перехода на вторую строку\",\r\n          favorite: false,\r\n          like: false,\r\n          id: 2,\r\n        },\r\n        { label: \"Тут что-то написано\", favorite: false, like: false, id: 3 },\r\n      ],\r\n      term: \"\",\r\n      filter: \"all\",\r\n    }\r\n    this.maxId = 4\r\n  }\r\n\r\n  deleteItemHandler = (id) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex((elem) => {\r\n        return elem.id === id\r\n      })\r\n      const before = data.slice(0, index)\r\n      const after = data.slice(index + 1)\r\n\r\n      const newArr = [...before, ...after]\r\n      return {\r\n        data: newArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  addItemHandler = (text) => {\r\n    const newItem = {\r\n      label: text,\r\n      favorite: false,\r\n      id: this.maxId++,\r\n    }\r\n\r\n    this.setState(({ data }) => {\r\n      const newArr = [...data, newItem]\r\n      return {\r\n        data: newArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleLikeHangler = (id) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex((elem) => {\r\n        return elem.id === id\r\n      })\r\n\r\n      const old = data[index]\r\n      const newItem = { ...old, like: !old.like }\r\n\r\n      const newArr = [\r\n        ...data.slice(0, index),\r\n        newItem,\r\n        ...data.slice(index + 1),\r\n      ]\r\n\r\n      return {\r\n        data: newArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleFavoriteHangler = (id) => {\r\n    this.setState(({ data }) => {\r\n      const index = data.findIndex((elem) => {\r\n        return elem.id === id\r\n      })\r\n\r\n      const old = data[index]\r\n      const newItem = { ...old, favorite: !old.favorite }\r\n\r\n      const newArr = [\r\n        ...data.slice(0, index),\r\n        newItem,\r\n        ...data.slice(index + 1),\r\n      ]\r\n\r\n      return {\r\n        data: newArr,\r\n      }\r\n    })\r\n  }\r\n\r\n  onUpdateSearch = (term) => {\r\n    this.setState({ term })\r\n  }\r\n\r\n  searchPost = (items, term) => {\r\n    if (term.length === 0) {\r\n      return items\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.indexOf(term) > -1\r\n    })\r\n  }\r\n\r\n  filterPost = (items, filter) => {\r\n    if (filter === \"like\") {\r\n      return items.filter((item) => item.like)\r\n    } else {\r\n      return items\r\n    }\r\n  }\r\n\r\n  onFilterSelect = (filter) => {\r\n    this.setState({ filter })\r\n  }\r\n\r\n  render() {\r\n    const { data, term, filter } = this.state\r\n    const liked = data.filter((item) => item.like).length\r\n    const allPosts = data.length\r\n\r\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter)\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader liked={liked} allPosts={allPosts} />\r\n        <div className=\"search-panel\">\r\n          <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n          <PostStatusFilter\r\n            filter={filter}\r\n            onFilterSelect={this.onFilterSelect}\r\n          />\r\n        </div>\r\n        <PostList\r\n          posts={visiblePosts}\r\n          onToggleLike={this.toggleLikeHangler}\r\n          onToggleFavorite={this.toggleFavoriteHangler}\r\n          onDelete={this.deleteItemHandler}\r\n        />\r\n        <PostAddForm onAdd={this.addItemHandler} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />,document.getElementById('root'))\n"],"sourceRoot":""}